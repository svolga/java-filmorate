
DROP TABLE IF EXISTS user_friend;
DROP TABLE IF EXISTS film_genre;
DROP TABLE IF EXISTS `like`;
DROP TABLE IF EXISTS film;
DROP TABLE IF EXISTS `user`;
DROP TABLE IF EXISTS genre;
DROP TABLE IF EXISTS mpa;


CREATE TABLE IF NOT EXISTS `user`
(
    user_id    INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email      varchar(255) NOT NULL,
    login      varchar(32)  NOT NULL,
    name       varchar(64)         NOT NULL,
    birthday   date                NOT NULL,
    updated_at timestamp           NOT NULL DEFAULT (now())
);

CREATE TABLE IF NOT EXISTS user_friend
(
    user_id    integer   NOT NULL,
    friend_id  integer   NOT NULL,
    updated_at timestamp NOT NULL DEFAULT (now()),
    PRIMARY KEY (user_id, friend_id)
);

CREATE TABLE IF NOT EXISTS film
(
    film_id      INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name         varchar(255) NOT NULL,
    description  text,
    release_date date         NOT NULL,
    duration     integer      NOT NULL,
    rate         double,
    mpa_id    integer,
    updated_at   timestamp    NOT NULL DEFAULT (now())
);

CREATE TABLE IF NOT EXISTS genre
(
    genre_id   INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name       varchar(16) UNIQUE NOT NULL,
    updated_at timestamp          NOT NULL DEFAULT (now())
);

CREATE TABLE IF NOT EXISTS film_genre
(
    film_id    integer   NOT NULL,
    genre_id   integer   NOT NULL,
    updated_at timestamp NOT NULL DEFAULT (now()),
    PRIMARY KEY (film_id, genre_id)
);

CREATE TABLE IF NOT EXISTS mpa
(
    mpa_id  INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name       varchar(8) UNIQUE NOT NULL,
    updated_at timestamp         NOT NULL DEFAULT (now())
);

CREATE TABLE IF NOT EXISTS `like`
(
    user_id    integer   NOT NULL,
    film_id    integer   NOT NULL,
    updated_at timestamp NOT NULL DEFAULT (now()),
    PRIMARY KEY (user_id, film_id)
);

ALTER TABLE user_friend
    ADD FOREIGN KEY (user_id) REFERENCES `user` (user_id) ON DELETE CASCADE ON UPDATE NO ACTION;

ALTER TABLE user_friend
    ADD FOREIGN KEY (friend_id) REFERENCES `user` (user_id) ON DELETE CASCADE ON UPDATE NO ACTION;

ALTER TABLE film_genre
    ADD FOREIGN KEY (film_id) REFERENCES film (film_id) ON DELETE CASCADE ON UPDATE NO ACTION;

ALTER TABLE film_genre
    ADD FOREIGN KEY (genre_id) REFERENCES genre (genre_id) ON DELETE CASCADE ON UPDATE NO ACTION;

ALTER TABLE film
    ADD FOREIGN KEY (mpa_id) REFERENCES mpa (mpa_id) ON DELETE SET NULL ON UPDATE NO ACTION;

ALTER TABLE `like`
    ADD FOREIGN KEY (film_id) REFERENCES film (film_id) ON DELETE CASCADE ON UPDATE NO ACTION;

ALTER TABLE `like`
    ADD FOREIGN KEY (user_id) REFERENCES `user` (user_id) ON DELETE CASCADE ON UPDATE NO ACTION;

